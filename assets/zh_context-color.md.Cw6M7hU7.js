import{T as c,a as k,b as d,c as o,d as r,e as E,f as m,g as u,h as C,i as F}from"./chunks/base.pPu-AAlJ.js";import{Q as n}from"./chunks/index.B9nQk4HH.js";import{o as y,c as X,a0 as p,G as i,w as e,k as t,j as a,a as l,B as g}from"./chunks/framework.BFGFFC7y.js";const Q=JSON.parse('{"title":"颜色 ( ctx-c )","description":"","frontmatter":{},"headers":[],"relativePath":"zh/context-color.md","filePath":"zh/context-color.md"}'),b={name:"zh/context-color.md"},x=Object.assign(b,{setup(B){return(Z,s)=>{const h=g("ClientOnly");return y(),X("div",null,[s[0]||(s[0]=p('<h1 id="颜色-ctx-c" tabindex="-1">颜色 ( ctx-c ) <a class="header-anchor" href="#颜色-ctx-c" aria-label="Permalink to &quot;颜色 ( ctx-c )&quot;">​</a></h1><h2 id="基本用法" tabindex="-1">基本用法 <a class="header-anchor" href="#基本用法" aria-label="Permalink to &quot;基本用法&quot;">​</a></h2><p>在元素的 <code>class</code> 中使用 <code>ctx-c-${name}_${color}</code> 的格式定义一个名为 <code>ctx-c-${name}</code> 的 CSS 变量，其颜色值为 <code>${color}</code>。定义后，该元素下的 <code>class</code> 可以直接使用 <code>ctx-c-${name}</code> 作为颜色值。</p>',3)),i(h,null,{default:e(()=>[i(t(n),{title:"",description:"",select:"vue",order:"vue,react,html",github:"",gitlab:"",theme:"",lightTheme:"",darkTheme:"",stackblitz:"%7B%22show%22%3Afalse%7D",codesandbox:"%7B%22show%22%3Afalse%7D",codeplayer:"%7B%22show%22%3Afalse%7D",files:"%7B%22vue%22%3A%7B%7D%2C%22react%22%3A%7B%7D%2C%22html%22%3A%7B%7D%7D",scope:"",visible:!0,vueCode:t(c)},{vue:e(()=>[i(k)]),_:1},8,["vueCode"])]),_:1}),s[1]||(s[1]=a("h2",{id:"透明度",tabindex:"-1"},[l("透明度 "),a("a",{class:"header-anchor",href:"#透明度","aria-label":'Permalink to "透明度"'},"​")],-1)),s[2]||(s[2]=a("p",null,[a("code",null,"unocss"),l("中控制透明度的方式在"),a("code",null,"ctx-c"),l("中也是同样适用的，在定义或者使用时均可以通过在预设名最后拼接上透明度。")],-1)),s[3]||(s[3]=a("p",null,[l("另外，您还可以通过"),a("code",null,"ctx-op-${name}-${num}"),l("的方式来修改元素下使用了"),a("code",null,"ctx-c-${name}"),l("的属性透明度，其优先级低于直接在属性后加后缀的方式。")],-1)),i(h,null,{default:e(()=>[i(t(n),{title:"",description:"",select:"vue",order:"vue,react,html",github:"",gitlab:"",theme:"",lightTheme:"",darkTheme:"",stackblitz:"%7B%22show%22%3Afalse%7D",codesandbox:"%7B%22show%22%3Afalse%7D",codeplayer:"%7B%22show%22%3Afalse%7D",files:"%7B%22vue%22%3A%7B%7D%2C%22react%22%3A%7B%7D%2C%22html%22%3A%7B%7D%7D",scope:"",visible:!0,vueCode:t(d)},{vue:e(()=>[i(o)]),_:1},8,["vueCode"])]),_:1}),s[4]||(s[4]=p('<h2 id="明度" tabindex="-1">明度 <a class="header-anchor" href="#明度" aria-label="Permalink to &quot;明度&quot;">​</a></h2><p>您可以在使用了<code>ctx-c-${name}</code>的属性后添加后缀 <code>-${num}</code> 来控制颜色的明度。明度以 <code>500</code> 为基准，值越小颜色越亮，值越大颜色越暗。</p><p>另外，您还可以通过<code>ctx-l-${name}-${num}</code>的方式来修改元素下使用了<code>ctx-c-${name}</code>的属性亮度，其优先级低于直接在属性后加后缀的方式。</p><div class="tip custom-block"><p class="custom-block-title">注意</p><p>调整后的颜色明度的实际范围将限定在 15% 到 95% 之间。</p></div>',4)),i(h,null,{default:e(()=>[i(t(n),{title:"",description:"",select:"vue",order:"vue,react,html",github:"",gitlab:"",theme:"",lightTheme:"",darkTheme:"",stackblitz:"%7B%22show%22%3Afalse%7D",codesandbox:"%7B%22show%22%3Afalse%7D",codeplayer:"%7B%22show%22%3Afalse%7D",files:"%7B%22vue%22%3A%7B%7D%2C%22react%22%3A%7B%7D%2C%22html%22%3A%7B%7D%7D",scope:"",visible:!0,vueCode:t(r)},{vue:e(()=>[i(E)]),_:1},8,["vueCode"])]),_:1}),s[5]||(s[5]=p('<h2 id="反转明度" tabindex="-1">反转明度 <a class="header-anchor" href="#反转明度" aria-label="Permalink to &quot;反转明度&quot;">​</a></h2><p>在使用<code>ctx</code>提供的方式控制颜色明度时，您可以通过 <code>ctx-r-y</code> 来反转明度，使值越大颜色越亮，值越小颜色越暗。使用 <code>ctx-r-${name}-y</code> 可以指定仅反转特定颜色名的明度。</p><p>如果使用 <code>ctx-r-n</code>，则表示取消反转。</p>',3)),i(h,null,{default:e(()=>[i(t(n),{title:"",description:"",select:"vue",order:"vue,react,html",github:"",gitlab:"",theme:"",lightTheme:"",darkTheme:"",stackblitz:"%7B%22show%22%3Afalse%7D",codesandbox:"%7B%22show%22%3Afalse%7D",codeplayer:"%7B%22show%22%3Afalse%7D",files:"%7B%22vue%22%3A%7B%7D%2C%22react%22%3A%7B%7D%2C%22html%22%3A%7B%7D%7D",scope:"",visible:!0,vueCode:t(m)},{vue:e(()=>[i(u)]),_:1},8,["vueCode"])]),_:1}),s[6]||(s[6]=a("h2",{id:"多重赋值",tabindex:"-1"},[l("多重赋值 "),a("a",{class:"header-anchor",href:"#多重赋值","aria-label":'Permalink to "多重赋值"'},"​")],-1)),s[7]||(s[7]=a("p",null,"颜色变量允许你使用其他颜色变量赋值，这会让你的颜色变得更加灵活，当然也会更加复杂。",-1)),i(h,null,{default:e(()=>[i(t(n),{title:"",description:"",select:"vue",order:"vue,react,html",github:"",gitlab:"",theme:"",lightTheme:"",darkTheme:"",stackblitz:"%7B%22show%22%3Afalse%7D",codesandbox:"%7B%22show%22%3Afalse%7D",codeplayer:"%7B%22show%22%3Afalse%7D",files:"%7B%22vue%22%3A%7B%7D%2C%22react%22%3A%7B%7D%2C%22html%22%3A%7B%7D%7D",scope:"",visible:!0,vueCode:t(C)},{vue:e(()=>[i(F)]),_:1},8,["vueCode"])]),_:1}),s[8]||(s[8]=p(`<h2 id="获取原始css颜色变量" tabindex="-1">获取原始css颜色变量 <a class="header-anchor" href="#获取原始css颜色变量" aria-label="Permalink to &quot;获取原始css颜色变量&quot;">​</a></h2><p>预设中提供了<code>resolveCtxColor</code>方法，能够直接获取到<code>ctx-c-\${name}_\${color}</code>生成的变量值，这或许能够帮助你定义全局的颜色变量。</p><p>前缀<code>ctx-c-</code>可加也可不加。如果<code>color</code>是主题颜色时，必须要在第二个参数中传入unocss的<code>theme</code>。</p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { defineConfig, presetUno } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;unocss&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { presetCtx, resolveCtxColor } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;unocss-preset-ctx&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">export</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> default</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> defineConfig</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  presets: [</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">presetUno</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(), </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">presetCtx</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()],</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  preflights: [</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">      getCSS</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: ({ </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">theme</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> }) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">        const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> ctxColor</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> resolveCtxColor</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;tt_primary&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, theme);</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">        if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (ctxColor) {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">          return</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> \`</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">            :root {</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">              \${</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Object</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">entries</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">(</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">ctxColor</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">).</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">map</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">(([</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">k</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">v</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">]) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> \`\${</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">k</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">}: \${</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">v</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">};\`</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">).</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">join</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">\\n</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">)</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">}</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">            }</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">          \`</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      },</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    },</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  ],</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">});</span></span></code></pre></div>`,4))])}}});export{Q as __pageData,x as default};
