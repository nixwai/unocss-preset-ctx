import{T as s,a as n,b as i,c as d}from"./chunks/base.Bq7X2obZ.js";import{A as l}from"./chunks/index.46V57a1K.js";import{o as h,c as u,a0 as r,G as e,w as o,k as a,B as m}from"./chunks/framework.danP1z9m.js";const x=JSON.parse('{"title":"Color ( ctx-c )","description":"","frontmatter":{},"headers":[],"relativePath":"context-color.md","filePath":"en/context-color.md"}'),b={name:"context-color.md"},V=Object.assign(b,{setup(v){return(f,t)=>{const c=m("ClientOnly");return h(),u("div",null,[t[0]||(t[0]=r('<h1 id="color-ctx-c" tabindex="-1">Color ( ctx-c ) <a class="header-anchor" href="#color-ctx-c" aria-label="Permalink to &quot;Color ( ctx-c )&quot;">​</a></h1><h2 id="definition" tabindex="-1">Definition <a class="header-anchor" href="#definition" aria-label="Permalink to &quot;Definition&quot;">​</a></h2><p>Defines the <code>class</code> of the format <code>ctx-c-${name}_${color}</code> in the element. You can get a CSS variable called <code>ctx-c-${name}</code> with the value <code>${color}</code>. Then <code>class</code> after this element can use <code>ctx-c-${name}</code> as the color value.</p><p>When using this, you can add a suffix <code>-${num}</code> to the variable name to control the brightness of the color. The brightness is based on <code>500</code>. Higher values make the color brighter, while lower values make it darker.</p>',4)),e(c,null,{default:o(()=>[e(a(l),{title:"",description:"",select:"vue",order:"vue,react,html",github:"",gitlab:"",theme:"",lightTheme:"",darkTheme:"",stackblitz:"%7B%22show%22%3Afalse%7D",codesandbox:"%7B%22show%22%3Afalse%7D",codeplayer:"%7B%22show%22%3Afalse%7D",files:"%7B%22vue%22%3A%7B%7D%2C%22react%22%3A%7B%7D%2C%22html%22%3A%7B%7D%7D",scope:"",visible:!0,vueCode:a(s)},{vue:o(()=>[e(n)]),_:1},8,["vueCode"])]),_:1}),t[1]||(t[1]=r('<h2 id="reverse-brightness" tabindex="-1">Reverse Brightness <a class="header-anchor" href="#reverse-brightness" aria-label="Permalink to &quot;Reverse Brightness&quot;">​</a></h2><p>When you use <code>-${num}</code> to control the brightness of the color, you can reverse the brightness using <code>ctx-r-y</code>, making smaller values brighter and larger values darker. Using <code>ctx-r-${name}-y</code> allows you to specify which color name to reverse.</p><p>If you use <code>ctx-r-n</code>, it indicates that no reversal should be applied.</p>',3)),e(c,null,{default:o(()=>[e(a(l),{title:"",description:"",select:"vue",order:"vue,react,html",github:"",gitlab:"",theme:"",lightTheme:"",darkTheme:"",stackblitz:"%7B%22show%22%3Afalse%7D",codesandbox:"%7B%22show%22%3Afalse%7D",codeplayer:"%7B%22show%22%3Afalse%7D",files:"%7B%22vue%22%3A%7B%7D%2C%22react%22%3A%7B%7D%2C%22html%22%3A%7B%7D%7D",scope:"",visible:!0,vueCode:a(i)},{vue:o(()=>[e(d)]),_:1},8,["vueCode"])]),_:1})])}}});export{x as __pageData,V as default};
